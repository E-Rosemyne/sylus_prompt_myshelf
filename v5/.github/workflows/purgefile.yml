---
name: Purge File

on:
  workflow_dispatch:
    inputs:
      filepath:
        description: "The path of the file to be deleted."
        required: true
        default: "" # Default value for filepath input

permissions:
  contents: write
  issues: write

env:
  ACTIONS_STEP_DEBUG: true # Enables debug logs for all jobs and steps

jobs:
  purge-file:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository with full history
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Set up Git with PAT
      - name: Set up Git with PAT
        run: |
          git config user.name "Lyra[bot]"
          git config user.email "lyra@myshelf.ai"
          git remote set-url origin https://x-access-token:${{ secrets.MYSHELF }}@github.com/${{ github.repository }}.git

      # Step 3: Validate input filepath
      - name: Validate Input
        run: |
          if [ -z "${{ github.event.inputs.filepath }}" ]; then
            echo "Error: 'filepath' input is required." > purgefile-error-log.txt
            exit 1
          fi
          echo "Validated input filepath: ${{ github.event.inputs.filepath }}"

      # Step 4: Archive the specified file
      - name: Archive File
        run: |
          FILE_PATH="${{ github.event.inputs.filepath }}"
          if [ -f "$FILE_PATH" ]; then
            echo "File found: $FILE_PATH. Preparing to archive." >> purgefile-error-log.txt
            mkdir -p archive || {
              echo "Failed to create archive directory." >> purgefile-error-log.txt
              exit 1
            }
            TIMESTAMP=$(date -u +"%Y-%m-%dT%H.%M.%S")
            ARCHIVE_FILE="archive/$(basename $FILE_PATH).$TIMESTAMP"
            cp "$FILE_PATH" "$ARCHIVE_FILE" || {
              echo "Failed to archive file: $FILE_PATH" >> purgefile-error-log.txt
              exit 1
            }
            echo "Archived $FILE_PATH as $ARCHIVE_FILE" >> purgefile-error-log.txt
          else
            echo "Error: File not found at $FILE_PATH. Cannot archive or delete." >> purgefile-error-log.txt
            exit 1
          fi

      # Step 5: Delete the specified file
      - name: Delete File
        run: |
          FILE_PATH="${{ github.event.inputs.filepath }}"
          if [ -f "$FILE_PATH" ]; then
            git rm "$FILE_PATH" || {
              echo "Error removing file: $FILE_PATH" >> purgefile-error-log.txt
              exit 1
            }
            git commit -m "Remove $FILE_PATH" || {
              echo "Error committing file removal: $FILE_PATH" >> purgefile-error-log.txt
              exit 1
            }
          else
            echo "Error: File not found at $FILE_PATH for deletion." >> purgefile-error-log.txt
            exit 1
          fi

      # Step 6: Push changes to the repository
      - name: Push Changes
        run: |
          echo "Attempting to push changes to main branch..." >> purgefile-error-log.txt
          if ! git push origin main; then
            echo "Error: Failed to push changes to main branch." >> purgefile-error-log.txt
            exit 1
          fi

      # Step 7: Confirm File Deletion
      - name: Confirm File Deletion
        run: |
          FILE_PATH="${{ github.event.inputs.filepath }}"
          git fetch origin main
          if git ls-tree --name-only origin/main | grep -q "$(basename $FILE_PATH)"; then
            echo "Error: File deletion failed for $FILE_PATH." >> purgefile-error-log.txt
            exit 1
          else
            echo "File successfully deleted: $FILE_PATH"
          fi

      # Step 8: Notify via GitHub Issues on failure
      - name: Notify via GitHub Issues
        if: failure()
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: Purge File Failure
          content-filepath: ./purgefile-error-log.txt
          labels: bug