name: rootdata_updated

on:
  workflow_dispatch: # Enable manual triggering

jobs:
  archive_and_backup:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository with full history
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.MYSHELF }}

      # Step 2: Set up Git configuration
      - name: Set up Git
        run: |
          git config user.name "Lyra[bot]"
          git config user.email "lyra@myshelf.ai"
          git remote set-url origin https://x-access-token:${{ secrets.MYSHELF }}@github.com/${{ github.repository }}.git

      # Step 3: Validate data.json
      - name: Validate Root data.json
        run: |
          echo "Validating root-level data.json..."
          if [ ! -f data.json ]; then
            echo "Error: Root data.json file not found" >> rootdata-error-log.txt
            exit 1
          fi
          python validate_root_json.py data.json || {
            echo "Error: JSON validation failed for data.json" >> rootdata-error-log.txt
            exit 1
          }
          echo "Root data.json validation succeeded."

      # Step 4: Pre-Update Backup of data.json
      - name: Backup Current data.json
        run: |
          echo "Starting backup of data.json..."
          mkdir -p archive
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H.%M.%S")
          ARCHIVE_FILE="archive/data.json.$TIMESTAMP"
          cp data.json "$ARCHIVE_FILE"
          echo "Archived current data.json as $ARCHIVE_FILE before update." >> rootdata-error-log.txt

      # Step 5: Commit and Push Archive Changes
      - name: Commit and Push Archive
        run: |
          echo "Committing archived files..."
          git add archive/ || {
            echo "Error adding files to git." >> rootdata-error-log.txt
            exit 1
          }
          git commit -m "Backup: Archived root data.json on $(date -u +'%Y-%m-%dT%H:%M:%SZ')" || {
            echo "Error committing changes to git." >> rootdata-error-log.txt
            exit 1
          }
          git push origin main || {
            echo "Error pushing changes to main branch." >> rootdata-error-log.txt
            exit 1
          }
          echo "Successfully committed and pushed archive changes."

      # Step 6: Notify via GitHub Issues if any step fails
      - name: Notify via GitHub Issues
        if: failure()
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: Root Data Backup Failure
          content-filepath: ./rootdata-error-log.txt
          labels: bug

      # Step 7: Debug Archive State
      - name: Debug Archive State
        if: always()
        run: |
          echo "Listing archive directory contents..."
          ls -l archive || echo "No files in archive."
