name: archivedata

on:
  workflow_run:
    workflows:
      - syncdata
    types:
      - completed
  workflow_dispatch: # Enable manual triggering

jobs:
  archive_and_cleanup:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository with full history
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch full repository history for proper file handling
          token: ${{ secrets.MYSHELF }}

      # Step 2: Set up Git configuration
      - name: Set up Git
        run: |
          git config user.name "Ziggy[bot]"
          git config user.email "ziggy@myshelf.ai"
          git remote set-url origin https://x-access-token:${{ secrets.MYSHELF }}@github.com/${{ github.repository }}.git

      # Step 3: Archive the updated data.json
      - name: Archive Updated data.json
        run: |
          if [ -f updates/data.json ]; then
            mkdir -p archive
            TIMESTAMP=$(date -u +"%Y-%m-%dT%H.%M.%S")
            ARCHIVE_FILE="archive/data.json.$TIMESTAMP"
            cp updates/data.json "$ARCHIVE_FILE"
            echo "Archived data.json as $ARCHIVE_FILE." >> archivedata-error-log.txt
          else
            echo "Error: updates/data.json file not found." >> archivedata-error-log.txt
            exit 1
          fi

      # Step 4: Cleanup old backups in the archive folder
      - name: Cleanup Old Backups
        run: |
          echo "Cleaning up archive files older than 30 days..." >> archivedata-error-log.txt
          FILE_COUNT=$(find archive -type f -mtime +30 | wc -l)
          if ! find archive -type f -mtime +30 -exec rm -f {} \;; then
            echo "Error: Failed to clean up archive files." >> archivedata-error-log.txt
            exit 1
          fi
          echo "Cleanup completed. Removed $FILE_COUNT files older than 30 days from archive folder." >> archivedata-error-log.txt

      # Step 5: Cleanup residual files in the context path
      - name: Cleanup Context Path
        run: |
          CONTEXT_PATH="context/"
          echo "Cleaning up files in context path: $CONTEXT_PATH..." >> archivedata-error-log.txt
          if [ -d "$CONTEXT_PATH" ]; then
            FILE_COUNT=$(find "$CONTEXT_PATH" -type f -mtime +30 | wc -l)
            if ! find "$CONTEXT_PATH" -type f -mtime +30 -exec rm -f {} \;; then
              echo "Error: Failed to clean up context files." >> archivedata-error-log.txt
              exit 1
            fi
            echo "Context cleanup completed. Removed $FILE_COUNT files older than 30 days from context folder." >> archivedata-error-log.txt
          else
            echo "Context path $CONTEXT_PATH does not exist. Skipping cleanup." >> archivedata-error-log.txt
          fi

      # Step 6: Commit and push changes
      - name: Commit and Push Changes
        run: |
          if ! git add archive/ context/; then
            echo "Error adding files to git." >> archivedata-error-log.txt
            exit 1
          fi
          if ! git commit -m "Archive: Added updates/data.json, cleaned up old backups, and context files"; then
            echo "Error committing changes to git." >> archivedata-error-log.txt
            exit 1
          fi
          if ! git push origin main; then
            echo "Error pushing changes to main branch. Check repository permissions." >> archivedata-error-log.txt
            exit 1
          fi
          echo "Successfully committed and pushed changes." >> archivedata-error-log.txt

      # Step 7: Notify via GitHub Issues if any step fails
      - name: Notify via GitHub Issues
        if: failure()  # Executes only if any of the previous steps fail
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: Archive Data Failure
          content-filepath: ./archivedata-error-log.txt
          labels: bug
